from flask import Flask, render_template, request
import pickle
from keras.models import load_model
from keras.preprocessing.sequence import pad_sequences
import numpy as np

app = Flask(__name__)

# Load tokenizer
with open('tokenizer.pickle', 'rb') as file:
    tokenizer = pickle.load(file)

# Load trained LSTM model
model = load_model('best_model.h5')

# Define malware types
malware_types = {
    1: 'Trojan',
    2: 'Backdoor',
    3: 'Downloader',
    4: 'Worms',
    5: 'Spyware',
    6: 'Adware',
    7: 'Dropper',
    8: 'Virus'
}

# Define maximum sequence length
max_length = 50000

@app.route('/')
def home():
    return render_template('index.html')
 
@app.route('/submit', methods=['POST'])
def submit():
    # Get text input from the form
    text = request.form['text']

    # Tokenize the input text
    tokens = tokenizer.texts_to_sequences([text])

    # Pad sequences
    padded_sequences = pad_sequences(tokens, maxlen=max_length)

    # Make prediction
    prediction = model.predict(padded_sequences)
    malware_type_id = np.argmax(prediction) + 1
    malware_type = malware_types.get(malware_type_id, 'Unknown')

    return render_template('output.html', output=malware_type)

if __name__=='__main__':
    app.run(debug=True)

